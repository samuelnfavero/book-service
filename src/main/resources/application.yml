server:
  port: 8102

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  application:
    name: book-service

  datasource:
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
    password: postgres123
    hikari:
      schema: books

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
        dialect: org.hibernate.dialect.PostgreSQLDialect

  flyway:
    url: jdbc:postgresql://localhost:5432/postgres
    schemas: books
    user: postgres
    password: postgres123
  boot:
    admin:
      client:
        url: http://localhost:8888

cambio-service:
  url: http://localhost:8000/cambio-service

management:
  info:
    env:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health, info, prometheus
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: false
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
  management:
    metrics:
      tags:
        application=${spring:application:name}:

info:
  app:
    name: @project.name@
    version: @project.version@

